{"ast":null,"code":"import _objectSpread from\"C:/Users/shawa/OneDrive/Desktop/biometric_crime_detection/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Drawer,List,ListItem,ListItemIcon,ListItemText,Typography,IconButton,Badge,Box,Divider,Chip}from'@mui/material';import{Notifications as NotificationsIcon,Security as SecurityIcon,Warning as WarningIcon,Info as InfoIcon,Error as ErrorIcon,Close as CloseIcon}from'@mui/icons-material';import api from'../config/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NotificationCenter=()=>{const[open,setOpen]=useState(false);const[notifications,setNotifications]=useState([]);const[unreadCount,setUnreadCount]=useState(0);useEffect(()=>{fetchNotifications();const interval=setInterval(fetchNotifications,10000);// Poll every 10 seconds\nreturn()=>clearInterval(interval);},[]);const fetchNotifications=async()=>{try{const response=await api.get('/api/notifications');const newNotifications=response.data;setNotifications(newNotifications);setUnreadCount(newNotifications.filter(n=>!n.read).length);}catch(error){console.error('Error fetching notifications:',error);}};const markAsRead=async notificationId=>{try{await api.put(\"/api/notifications/\".concat(notificationId,\"/read\"));setNotifications(notifications.map(n=>n.id===notificationId?_objectSpread(_objectSpread({},n),{},{read:true}):n));setUnreadCount(prev=>Math.max(0,prev-1));}catch(error){console.error('Error marking notification as read:',error);}};const getNotificationIcon=type=>{switch(type){case'security':return/*#__PURE__*/_jsx(SecurityIcon,{color:\"error\"});case'warning':return/*#__PURE__*/_jsx(WarningIcon,{color:\"warning\"});case'error':return/*#__PURE__*/_jsx(ErrorIcon,{color:\"error\"});default:return/*#__PURE__*/_jsx(InfoIcon,{color:\"info\"});}};const getSeverityColor=severity=>{switch(severity){case'high':return'error';case'medium':return'warning';case'low':return'info';default:return'default';}};const toggleDrawer=()=>{setOpen(!open);if(!open){// Mark all as read when opening\nnotifications.forEach(n=>{if(!n.read)markAsRead(n.id);});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:toggleDrawer,sx:{position:'fixed',top:20,right:20},children:/*#__PURE__*/_jsx(Badge,{badgeContent:unreadCount,color:\"error\",children:/*#__PURE__*/_jsx(NotificationsIcon,{})})}),/*#__PURE__*/_jsxs(Drawer,{anchor:\"right\",open:open,onClose:toggleDrawer,PaperProps:{sx:{width:350}},children:[/*#__PURE__*/_jsxs(Box,{sx:{p:2,display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Notifications\"}),/*#__PURE__*/_jsx(IconButton,{onClick:toggleDrawer,children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(List,{sx:{p:0},children:notifications.length===0?/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No notifications\",secondary:\"You're all caught up!\"})}):notifications.map(notification=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{sx:{bgcolor:notification.read?'transparent':'action.hover','&:hover':{bgcolor:'action.hover'}},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getNotificationIcon(notification.type)}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:notification.title}),/*#__PURE__*/_jsx(Chip,{label:notification.severity,size:\"small\",color:getSeverityColor(notification.severity),sx:{height:20}})]}),secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:notification.message}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:new Date(notification.timestamp).toLocaleString()})]})})]}),/*#__PURE__*/_jsx(Divider,{})]},notification.id))})]})]});};export default NotificationCenter;","map":{"version":3,"names":["React","useState","useEffect","Drawer","List","ListItem","ListItemIcon","ListItemText","Typography","IconButton","Badge","Box","Divider","Chip","Notifications","NotificationsIcon","Security","SecurityIcon","Warning","WarningIcon","Info","InfoIcon","Error","ErrorIcon","Close","CloseIcon","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NotificationCenter","open","setOpen","notifications","setNotifications","unreadCount","setUnreadCount","fetchNotifications","interval","setInterval","clearInterval","response","get","newNotifications","data","filter","n","read","length","error","console","markAsRead","notificationId","put","concat","map","id","_objectSpread","prev","Math","max","getNotificationIcon","type","color","getSeverityColor","severity","toggleDrawer","forEach","children","onClick","sx","position","top","right","badgeContent","anchor","onClose","PaperProps","width","p","display","alignItems","justifyContent","variant","primary","secondary","notification","bgcolor","gap","title","label","size","height","message","Date","timestamp","toLocaleString"],"sources":["C:/Users/shawa/OneDrive/Desktop/biometric_crime_detection/frontend/src/components/NotificationCenter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  IconButton,\n  Badge,\n  Box,\n  Divider,\n  Chip\n} from '@mui/material';\nimport {\n  Notifications as NotificationsIcon,\n  Security as SecurityIcon,\n  Warning as WarningIcon,\n  Info as InfoIcon,\n  Error as ErrorIcon,\n  Close as CloseIcon\n} from '@mui/icons-material';\nimport api from '../config/api';\n\nconst NotificationCenter = () => {\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  useEffect(() => {\n    fetchNotifications();\n    const interval = setInterval(fetchNotifications, 10000); // Poll every 10 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      const response = await api.get('/api/notifications');\n      const newNotifications = response.data;\n      setNotifications(newNotifications);\n      setUnreadCount(newNotifications.filter(n => !n.read).length);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  const markAsRead = async (notificationId) => {\n    try {\n      await api.put(`/api/notifications/${notificationId}/read`);\n      setNotifications(notifications.map(n =>\n        n.id === notificationId ? { ...n, read: true } : n\n      ));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  const getNotificationIcon = (type) => {\n    switch (type) {\n      case 'security':\n        return <SecurityIcon color=\"error\" />;\n      case 'warning':\n        return <WarningIcon color=\"warning\" />;\n      case 'error':\n        return <ErrorIcon color=\"error\" />;\n      default:\n        return <InfoIcon color=\"info\" />;\n    }\n  };\n\n  const getSeverityColor = (severity) => {\n    switch (severity) {\n      case 'high':\n        return 'error';\n      case 'medium':\n        return 'warning';\n      case 'low':\n        return 'info';\n      default:\n        return 'default';\n    }\n  };\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n    if (!open) {\n      // Mark all as read when opening\n      notifications.forEach(n => {\n        if (!n.read) markAsRead(n.id);\n      });\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        onClick={toggleDrawer}\n        sx={{ position: 'fixed', top: 20, right: 20 }}\n      >\n        <Badge badgeContent={unreadCount} color=\"error\">\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n\n      <Drawer\n        anchor=\"right\"\n        open={open}\n        onClose={toggleDrawer}\n        PaperProps={{\n          sx: { width: 350 }\n        }}\n      >\n        <Box sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n          <Typography variant=\"h6\">\n            Notifications\n          </Typography>\n          <IconButton onClick={toggleDrawer}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n\n        <Divider />\n\n        <List sx={{ p: 0 }}>\n          {notifications.length === 0 ? (\n            <ListItem>\n              <ListItemText\n                primary=\"No notifications\"\n                secondary=\"You're all caught up!\"\n              />\n            </ListItem>\n          ) : (\n            notifications.map((notification) => (\n              <React.Fragment key={notification.id}>\n                <ListItem\n                  sx={{\n                    bgcolor: notification.read ? 'transparent' : 'action.hover',\n                    '&:hover': { bgcolor: 'action.hover' }\n                  }}\n                >\n                  <ListItemIcon>\n                    {getNotificationIcon(notification.type)}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"subtitle2\">\n                          {notification.title}\n                        </Typography>\n                        <Chip\n                          label={notification.severity}\n                          size=\"small\"\n                          color={getSeverityColor(notification.severity)}\n                          sx={{ height: 20 }}\n                        />\n                      </Box>\n                    }\n                    secondary={\n                      <>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {notification.message}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {new Date(notification.timestamp).toLocaleString()}\n                        </Typography>\n                      </>\n                    }\n                  />\n                </ListItem>\n                <Divider />\n              </React.Fragment>\n            ))\n          )}\n        </List>\n      </Drawer>\n    </>\n  );\n};\n\nexport default NotificationCenter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}